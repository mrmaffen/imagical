// In order for Imagical to notice the SearchPlugin, we have to push it to the Imagical.searchPlugins array.
// The rest of the initialization will be completed within Imagical. We just have to worry about getting the correct results.
Imagical.searchPlugins.push(SearchPlugin.create({
	//this boolean value tells Imagical, whether or not this SearchPlugin should be enabled right from the start
	isEnabled: true,
	//the name of this Plugin. This name will be displayed right beneath the checkbox that'll be generated by Imagical.
	pluginName: "Example",
	//the core of this SearchPlugin, the function which retrieves the correct results in a promise
	pluginFunction: function (keyWord){
			  // We don't use the given keyWord in this example script,
			  // we simply generate an array of 20 placeholder images with random colors
			  
			  // this pluginFunction needs to return a promise
			  var promise = RSVP.Promise(function(resolve, reject){
			      var resultArray = [];
			      for (var i = 0; i < 20; i++){
				// some random number in the correct value range
				var randomNumber = Math.floor((Math.random()*16777215)+1);
				// convert our random number to a String containing a hex number
				var hexColorString = randomNumber.toString(16);
				resultArray.push({
							//Title of the image
							title: "ExampleTitle",
							//Thumbnail URL
							tnUrl: "http://placehold.it/150x150/"+ hexColorString +"/"+ hexColorString +".png",
							//DirectLink to the image
							url: "http://placehold.it/1500x1500/"+ hexColorString +"/"+ hexColorString +".png",
							//URL of the corresponding website
							siteUrl: "http://placehold.it",
							//Name of this plugin (has to be unique within Imagical)
							pluginName: "Example"
						    });
			      }
			      // call resolve with the filled result array, when we're done
			      resolve(resultArray);
			  });
			  return promise;
		      }
}));